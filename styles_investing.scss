$hover_button_count: 4;

%stretch-width {
    width: 100%;
}

%standard-flexbox {
    display: flex;
    flex-direction: row;
    align-items: center;
    height: calc(100vh - 85px);
    width: 100%;
}

table {
    th, td {
        padding: 5px;
    }
    tr {
        &:first-child {
            font-weight: bold;
        }
        td:first-child {
            text-align: left;
        }
    }
    td + td {
        text-align: center;
    }
}

.stats_flex {
    @extend %standard-flexbox;
}

.chart_flex {
    @extend %standard-flexbox;
}

.info_hover_anchor { // I: relativizing position does not work with outer element defined by id (#)
    position: relative;
    display: inline-block;
    cursor: pointer;

    @for $info_hover_index_ from 1 through $hover_button_count {
        & #info_hover_#{$info_hover_index_} {
            position: absolute;
            bottom: 125%;
            left: 0px;
        }
    }
}

.info_hover {
    visibility: hidden;
    display: inline;
    background-color: #555;
    color: #fff;
    z-index: 1;
    border-radius: 6px;
    padding: 4px 5px;
    font-size: small;
    white-space: nowrap;

    &::after {
        content: "";
        position: absolute;
        border-style: solid;
        border-color: #555 transparent transparent transparent;
        border-width: 5px;
        top: 100%;
        left: calc(50% - 5px)
    }
}
// TD: fix first icon not having its message correctly centered on first hover
.stake_popup {
    display: inline-block;
    width: 700px;
    height: 250px;
    border-radius: 5px;
    color: chartreuse;
    border: 3px solid chartreuse;
    position: absolute;
    bottom: 60px;
    left: 0px;
    background-color: black;
    visibility: hidden;
    z-index: 2;

    .stake_exit_btn {
        position: absolute;
        right: 20px;
        top: 20px;
    } // I: absolute positions apply to each other as in a tree structure where the parent is always the thinker branch
    input[type=range]::-moz-range-track {
        @extend %stretch-width;

        background: chartreuse;
        height: 10px;
        cursor: pointer;
        box-shadow: 1px 1px 1px #000000;
        border-radius: 5px;
        border: 1px solid #000000;
    }
    input[type=range] {
        width: 70px
    }
}

.stake_popup_content {
    margin-left: 20px;
    margin-top: 15px;
    font-size: 13px; // display: flex /\: is this ever needed? maybe when the page gets crunched?

    & > tr > td {
        white-space: nowrap;
        padding: 10px;
        
    }
    & > tr {
        padding-top: 30px;
        padding-bottom: 50px
    }
}

.stake_max_btn {
    border: none;
    background-color: black;
    color: chartreuse;

    &:hover {
        color: red;
    }
}

.channel_stats {
    position: relative; // ??: insert vertical-align or create subdiv w disp:flex & vert center

    table { // I: this does not work with a <table> generated as a React component
        @extend %stretch-width;

        margin: 15px 0;
        font-size: 13px;

        tr ~ td {
            text-align: left;
        }
    }
    input[type=text] {
        background-color: rgb(5, 5, 15); 
        border-radius: 3px; 
        color: rgb(19, 168, 19);
        text-align: right;
    }
}

@for $watermark_i_ from 1 through 2 {
    #input_wm#{$watermark_i_} #wm#{$watermark_i_} {
        position: absolute;
        left: 20px;
        bottom: 50px;
        display: inline;
    }
}

@keyframes loading {
    0% {
        content: "\f251";
    }
    33.3% {
        content: "\f252";
    }
    66.7% {
        content: "\f253";
    }
    100% {
        content: "\f251";
    }
}

.fa-hourglass-half {
    font-size: 36px;

    &:before {
        animation-name: loading;
        animation-duration: 0.5s;
        animation-iteration-count: infinite;
    }
}